---
AWSTemplateFormatVersion: 2010-09-09
Description: IAM Role for Lambda
Parameters:
  QSS3BucketName:
    Description: The S3 Bucket Name of Zipped Lambda Code
    Type: String
  QSS3KeyPrefix:
    Description: The S3 Bucket Prefix of Zipped Lambda Code
    Type: String
  S3Bucket:
    Description: The S3 Bucket Name of Zipped Lambda Code
    Type: String
  UserName:
     Description: The IAM User to Create User and Access Key for
     Type: String
     Default: 'BootcampUser'
Resources:
  CleanupRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: S3COPY
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Sid: Logging
            Effect: Allow
            Action: logs:*
            Resource: '*'
          - Sid: S3
            Effect: Allow
            Action: s3:*
            Resource: '*'
  CopyFiles:
    DependsOn:
    - CleanupRole
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Base/templates/saas-bootcamp-copy-access-files.template
      Parameters:
        TemplateBucket: !Ref QSS3BucketName
        TemplatePrefix: !Ref QSS3KeyPrefix
        DestinationBucket: !Ref S3Bucket
        RoleArn: !GetAtt CleanupRole.Arn
  KeyUser:
    DependsOn:
    - CopyFiles
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Base/templates/create-user-access-key.template
      Parameters:
        UserName: !Ref UserName
        S3Bucket: !Ref S3Bucket
        S3BucketPrefix: !Ref QSS3KeyPrefix
        Object: 'Base/functions/packages/create-access-key/create-access-key.zip'
  Access:
    DependsOn:
    - KeyUser
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Base/templates/admin-access-policy.template
      Parameters:
        UserName: !Ref UserName
        S3Bucket: !Ref S3Bucket
        S3BucketPrefix: !Ref QSS3KeyPrefix
        Object: 'Base/functions/packages/admin-access-policy/admin-access-policy.zip'
Outputs:
  ACCESSKEYID:
    Description: The URL endpoint for the product service
    Value: !GetAtt KeyUser.Outputs.AccessKeyId
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", ACCESSKEYID ] ]
  SECRETACCESSKEY:
    Description: The URL endpoint for the product service
    Value: !GetAtt KeyUser.Outputs.SecretAccessKey
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", SECRETACCESSKEY ] ]
  USERNAME:
    Description: The URL endpoint for the product service
    Value: !GetAtt KeyUser.Outputs.UserName
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", USERNAME ] ]
...