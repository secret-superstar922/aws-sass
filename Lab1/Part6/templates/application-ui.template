---
AWSTemplateFormatVersion: 2010-09-09
Description: AngularJS Web Client Build and Deployment
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS Bootcamp Configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
      - BaselineStackName
    ParameterLabels:
      QSS3KeyPrefix:
        default: BOOTCAMP S3 KEY PREFIX
      QSS3BucketName:
        default: BOOTCAMP S3 BUCKET NAME
      BaselineStackName:
        default: BASELINE STACK NAME
Parameters:
  BaselineStackName:
    Type: String
    Description: BASELINE STACK NAME
    Default: module-saas-bootcamp-base
  BaselineServicesStackName:
    Type: String
    Description: Baseline "services" stack name to get exports from
  QSS3BucketName:
    Default: 'aws-bootcamp-us-east-1'
    Description: S3 bucket name for the Bootcamp assets. Bootcamp bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    Default: 'bootcamp/'
    Description: S3 key prefix for the Bootcamp assets. Bootcamp key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Resources:
  Order:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - API
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/order/order-service.template
      Parameters:
        BaselineStackName: !Ref BaselineStackName
        BaselineServicesStackName: !Ref BaselineServicesStackName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ServiceUrl: !GetAtt API.Outputs.RootUrl
  RemoveApis:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - CopyFiles
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/apigateway/delete-api-gateways.template
      Parameters:
        S3Bucket:
          Fn::ImportValue: !Sub "${BaselineStackName}-TEMPLATEBUCKET"
        S3BucketPrefix: !Ref QSS3KeyPrefix
        Object: "Lab1/Part6/functions/packages/delete-api-gateways/delete-api-gateways.zip"
  API:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - RemoveApis
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/apigateway/api-gateway-without-authorization.template
      Parameters:
        ServiceUrl:
          Fn::ImportValue: !Sub "${BaselineStackName}-ALBURL"
  Update:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - API
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/update/update-stacks.template
      Parameters:
        BaselineStackName: !Ref BaselineStackName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ServiceUrl: !GetAtt API.Outputs.RootUrl
  LambdaBucketRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ConfigPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Sid: Logging
            Effect: Allow
            Action: logs:*
            Resource: '*'
          - Sid: LAMBDA
            Effect: Allow
            Action: lambda:*
            Resource: '*'
          - Sid: S3
            Effect: Allow
            Action: s3:*
            Resource: '*'
  CopyFiles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/client/web-copy-files.template
      Parameters:
        TemplateBucket: !Ref QSS3BucketName
        TemplatePrefix: !Ref QSS3KeyPrefix
        DestinationBucket:
          Fn::ImportValue: !Sub "${BaselineStackName}-TEMPLATEBUCKET"
        RoleArn: !GetAtt LambdaBucketRole.Arn
  WaitHandleWebClient:
    Type: AWS::CloudFormation::WaitConditionHandle
  WebClient:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - CopyFiles
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/client/web-client-build.template
      Parameters:
        ServiceUrl: !GetAtt API.Outputs.RootUrl
        ServiceName: client
        TemplateBucket:
          Fn::ImportValue: !Sub "${BaselineStackName}-TEMPLATEBUCKET"
        TemplatePrefix: !Ref QSS3KeyPrefix
        WaitURL: !Ref WaitHandleWebClient
  WaitConditionWebClient:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn:
    - WebClient
    Properties:
      Handle: !Ref WaitHandleWebClient
      Timeout: '3600'
      Count: '1'
  WebPerm:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - CopyFiles
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/client/bucket-public-read.template
      Parameters:
        Bucket: !GetAtt WebClient.Outputs.WebBucket
  RestartTasks:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - Update
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}Lab1/Part6/templates/update/restart-tasks.template
      Parameters:
        S3Bucket:
          Fn::ImportValue: !Sub "${BaselineStackName}-TEMPLATEBUCKET"
        S3BucketPrefix: !Ref QSS3KeyPrefix
        Object: "Lab1/Part6/functions/packages/restart-tasks/restart-tasks.zip"
        Cluster:
          Fn::ImportValue: !Sub "${BaselineStackName}-ECSCLUSTER"
        BaselineStackName: !Ref BaselineStackName
Outputs:
  PRODUCTTASKDEFINITION:
    Description: PRODUCTTASKDEFINITION
    Value: !GetAtt Update.Outputs.PRODUCTTASKDEFINITION
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName", PRODUCTTASKDEFINITION ] ]
...